---
title: "SDG contributions"
format: html
execute:
  keep-md: true
---

```{r load data}
library(sparklyr)
library(ggplot2)
library(patchwork)
library(dplyr)
library(arrow)
library(here)
library(tidyr)
library(forcats)
library(readr)
library(stringr)

theme_set(theme_bw())

source(here("R/helpers.R"))

Sys.setenv(SPARK_HOME = "/home/tklebel/spark-3.4.0-bin-hadoop3/")
Sys.setenv(HADOOP_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(HADOOP_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(YARN_HOME = "/home/hadoop/hadoop-3.3.1")
Sys.setenv(YARN_CONF_DIR = "/home/hadoop/hadoop-3.3.1/etc/hadoop")
Sys.setenv(JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64")

config <- spark_config()
config$spark.executor.cores <- 5
config$spark.executor.instances <- 38
config$spark.executor.memory <- "20G"
config$spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version <- 2

sc <- spark_connect(master = "yarn", config = config,
                    app_name = "SDG-knowledge-production")

message("Connection to Spark successful!")

message("Reading the datasets...")

# Overall MAG data
paper_cols <- c("paperid", "rank", "doi", "type", "title_normalised", "title", 
                "unknown1", "year", "date", "unknown2", "publisher", 
                paste0("unknown", 3:12),
                "journal", paste0("unknown", c(14:16)))

mag_2021_papers <- spark_read_csv(sc, "/tklebel/mag-2021-03-15/Papers.txt",
                                  name = "mag2021_papers",
                                  memory = FALSE,
                                  delimiter = "\\t", header = FALSE,
                                  columns = paper_cols)

affil_cols <- c("paperid", "authorid", "affiliationid", "authorsequencenumber",
                "originalauthor", "originalaffiliation")

mag_2021_paper_author_affil <- spark_read_csv(
  sc, 
  "/tklebel/mag-2021-03-15/PaperAuthorAffiliations.txt",
  name = "mag2021_paper_author_affil", delimiter = "\\t",
  memory = FALSE, header = FALSE, columns = affil_cols)

# this is data to fill in country information where we do not have it from the
# SDG set
missing_country_data <- spark_read_csv(
  sc,
  "/tklebel/SDG/additional_country_information.csv",
  name = "missing_country_data"
)

# SDG specific data
papers <- spark_read_csv(sc, "/tklebel/SDG/sdg_papers_collated.csv",
                         name = "papers")
sdg_labels <- spark_read_csv(sc, "/tklebel/SDG/sdg_labels.csv",
                             name = "sdg_labels")
# join the labels here, since we are doing everything by SDG
papers <- papers %>% 
  left_join(sdg_labels)

# remove 2020
papers <- papers %>% 
  filter(year < 2020)

# Affiliations
affils <- spark_read_csv(sc,
                         "/tklebel/SDG/affiliations_with_country_code.csv",
                         name = "affils")

author_paper_affiliations <- spark_read_csv(
  sc,
  "/tklebel/SDG/sdg_author_paper_affil.csv",
  name = "author_paper_affiliations"
)

# UN country information
un_countries <- read_csv2(here::here("data/external/UNSD â€” Methodology.csv"))

un_countries_selection <- un_countries %>% 
  select(country_code = `ISO-alpha3 Code`, country_name = `Country or Area`, 
         continent = `Region Name`, sub_continent = `Sub-region Name`)


# Leiden Ranking
leiden <- spark_read_csv(sc,
                         "/tklebel/SDG/leiden_ranking.csv",
                         name = "leiden")

```

# Sample size
```{r}
# total sample size
papers %>% 
  sdf_nrow()
```

```{r}
# per SDG
papers %>% 
  count(SDG_label)
```

```{r}
papers %>% 
  group_by(year) %>% 
  filter(year %in% c(2006, 2018)) %>% 
  count(SDG_label) %>% 
  arrange(SDG_label, year)
```




# Growth of literature
```{r sdg_count, fig.width=7, fig.height=4}
sdg_counts <- papers %>% 
  count(SDG_label, year) %>% 
  collect()

overall_count <- mag_2021_papers %>% 
  filter(year %in% 2006:2019) %>% 
  count(year, name = "overall_n") %>% 
  collect() %>% 
  mutate(year = as.integer(year))

merged_count <- sdg_counts %>% 
  left_join(overall_count) %>% 
  mutate(prop = n / overall_n)
  
merged_count %>% 
  drop_na() %>% 
  ggplot(aes(as_year(year), prop, colour = fix_sdg(SDG_label))) +
  geom_line() +
  geom_point() +
  colorspace::scale_color_discrete_qualitative() +
  scale_y_log10(labels = scales::comma,
                breaks = c(10e+3, 30e+3, 1e+5, 1e+6)) +
  labs(x = NULL, y = "# of publications", colour = NULL,
       title = "Development of SDG areas over time") 
```

Normalised by the overall number of papers in MAG, there is some growth for 
these literatures. 

```{r growth-rates}
growth_rate_data <- merged_count %>% 
  arrange(SDG_label, year) %>% 
  group_by(SDG_label) %>% 
  mutate(prop_change = prop / lag(prop),
         prop_change = replace_na(prop_change, 1),
         prop_change = prop_change - 1)

growth_rate_data %>% 
  ggplot(aes(as_year(year), prop_change, colour = fix_sdg(SDG_label))) +
  geom_line() +
  geom_point() +
  colorspace::scale_color_discrete_qualitative() +
  scale_y_continuous(labels = scales::percent) +
  labs(x = NULL, y = "Yearly growth rate relative to total papers in MAG",
       colour = NULL,
       title = "Development of SDG areas over time") +
  theme(legend.position = "top")
```



```{r}
growth_rate_data %>% 
  knitr::kable()

growth_rate_data %>% 
  filter(year %in% c(2006, 2019)) %>% 
  summarise(overall_growth_factor = {overall_n / lag(overall_n)}[2],
            individual_growth_factor = {n / lag(n)}[2],
            individual_growth_rate = individual_growth_factor^(1/(2019-2006)) - 1,
            overall_growth_rate = overall_growth_factor^(1/(2019-2006)) - 1) %>% 
  knitr::kable()
  
```

# Continents over time
```{r}
author_paper_affiliations_w_groups <- make_author_groups(author_paper_affiliations)

papers_w_affils <- papers %>% 
  select(paperid, SDG_label, year, citations_norm) %>% 
  left_join(author_paper_affiliations_w_groups) %>% 
  left_join(affils) %>% 
  select(paperid, SDG_label, year, authorid, affiliationid, country,
         paper_author_cat, author_position, citations_norm)
```


```{r}
papers_per_country_fos_author_pos <- papers_w_affils %>% 
  group_by(country, year, SDG_label, author_position) %>% 
  summarise(n = n()) %>% 
  collect()

papers_per_country_fos_author_pos_country <- papers_per_country_fos_author_pos %>%
  left_join(un_countries_selection, by = c("country" = "country_code")) %>% 
  drop_na()

normalised_region_share_time <- papers_per_country_fos_author_pos_country %>% 
  group_by(SDG_label, year, sub_continent) %>% 
  summarise(nn = sum(n)) %>% 
  mutate(share = nn/sum(nn))
```

```{r sub_continents_over_time, fig.width=8.2, fig.height=4.4}
date_scale <- scale_x_date(breaks = as_year(c(2006, 2010, 2015, 2019)),
               date_labels = "%Y")
base_col = "grey80"

subset_countries <- filter(
  normalised_region_share_time, 
  sub_continent %in% c("Northern America", "Western Europe", "Northern Europe",
                       "Eastern Asia"
  ))

normalised_region_share_time %>% 
  ggplot(aes(as_year(year), share, group = sub_continent, colour = sub_continent)) +
  geom_line(colour = base_col) +
  geom_line(data = subset_countries) +
  geom_point(data = subset_countries, size = 1.2) +
  facet_wrap(vars(fix_sdg(SDG_label))) +
  date_scale +
  scale_y_continuous(labels = function(x) scales::percent(x, 1)) +
  colorspace::scale_color_discrete_qualitative() +
  theme(legend.position = "top") +
  labs(x = NULL, y = "% of publications from world region within SDGs",
       colour = NULL)
```

This is now equivalent to full counting, since all author positions are included.


## Baseline calculation

```{r}
mag_2021_papers_w_affils <- mag_2021_papers %>% 
  select(paperid, year) %>% 
  left_join(mag_2021_paper_author_affil) %>% 
  left_join(affils) %>% 
  left_join(missing_country_data) %>% 
  select(paperid, year, authorid, affiliationid, country)
```


```{r}
mag_2021_papers_per_country <- mag_2021_papers_w_affils %>% 
  filter(year %in% 2006:2019) %>% 
  group_by(country, year) %>% 
  summarise(n = n()) %>% 
  collect()

mag_2021_papers_per_country_w_country_info <- mag_2021_papers_per_country %>%
  left_join(un_countries_selection, by = c("country" = "country_code")) %>% 
  drop_na()

mag_2021_normalised_region_share_time <- mag_2021_papers_per_country_w_country_info %>% 
  group_by(year, sub_continent) %>% 
  summarise(nn = sum(n)) %>% 
  mutate(share = nn/sum(nn))
```

```{r baseline_sub_continents_over_time, fig.width=8.2, fig.height=4.4}
date_scale <- scale_x_date(breaks = as_year(c(2006, 2010, 2015, 2019)),
               date_labels = "%Y")
base_col = "grey80"

mag_2021_subset_countries <- filter(
  mag_2021_normalised_region_share_time, 
  sub_continent %in% c("Northern America", "Western Europe", "Northern Europe",
                       "Eastern Asia"
  ))

mag_2021_normalised_region_share_time %>% 
  ggplot(aes(as_year(year), share, group = sub_continent, colour = sub_continent)) +
  geom_line(colour = base_col) +
  geom_line(data = mag_2021_subset_countries) +
  geom_point(data = mag_2021_subset_countries, size = 1.2) +
  date_scale +
  scale_y_continuous(labels = function(x) scales::percent(x, 1)) +
  colorspace::scale_color_discrete_qualitative() +
  theme(legend.position = "top") +
  labs(x = NULL, y = "% of publications from world region across MAG",
       colour = NULL)
```


## Joint figure including baseline
```{r, fig.width=8.2, fig.height=4.4}
#| fig-cap: "Proportion of research from world regions on SDGs. The dashed line
#|           indicates the average across all of MAG"
#| label: fig-sub_continents_over_time_with_baseline
normalised_region_share_time %>% 
  ggplot(aes(as_year(year), share, group = sub_continent, colour = sub_continent)) +
  geom_line(colour = base_col) +
  geom_line(data = mag_2021_subset_countries, linetype = 2) +
  geom_line(data = subset_countries) +
  geom_point(data = subset_countries, size = 1.2) +
  facet_wrap(vars(fix_sdg(SDG_label))) +
  date_scale +
  scale_y_continuous(labels = function(x) scales::percent(x, 1)) +
  colorspace::scale_color_discrete_qualitative() +
  theme(legend.position = "top") +
  labs(x = NULL, y = "% of publications from world region within SDGs",
       colour = NULL)
```


```{r}
# look at relative specialisation to identify how global south is represented in
# various SDGs
continent_specialisation <- normalised_region_share_time %>% 
  rename(nn_sdg = nn, share_sdg = share) %>% 
  mutate(year = as.character(year)) %>% 
  left_join(mag_2021_normalised_region_share_time) %>% 
  mutate(specialisation = share_sdg / share)
```

```{r, fig.width=10, fig.height=10}
#| label: fig-specialisation-by-world-region
#| fig-cap: "Specialisation of world regions. The specialisation factor is
#| calulated by dividing the share of research towards a certain SDG by the 
#| overall share of research coming from the same region. Melanesia, Polynesia
#| and Micronesia are omitted due to low cell counts."
continent_specialisation %>% 
  filter(!sub_continent %in% c("Melanesia", "Polynesia", "Micronesia")) %>% 
  ggplot(aes(as_year(year), specialisation, colour = fix_sdg(SDG_label))) +
  geom_hline(yintercept = 1, colour = "grey30") +
  geom_line() +
  geom_point(size = 1.1) +
  facet_wrap(vars(sub_continent)) +
  colorspace::scale_color_discrete_qualitative() +
  theme(legend.position = "top") +
  labs(x = NULL, colour = NULL, y = "Representation ratio")
```

```{r}
continent_specialisation %>% 
  arrange(sub_continent, SDG_label, year) %>% 
  rmarkdown::paged_table()
```



# Institutional prestige
```{r}
papers_per_affiliation_per_fos <- papers %>% 
  left_join(author_paper_affiliations) %>% 
  left_join(affils) %>% 
  group_by(authorid, paperid) %>% 
  mutate(frac_value = 1/n()) %>% 
  group_by(affiliationid, year, SDG_label) %>% 
  summarise(n_frac_papers = sum(frac_value, na.rm = TRUE)) %>% 
  collect()
```


```{r}
leiden_small_local <- leiden %>%
  filter(Field == "All sciences", Frac_counting == 1) %>%
  select(University, Country, Period, P_top10, PP_top10, impact_P) %>% 
  collect() %>% 
  mutate(across(c(P_top10, PP_top10, impact_P), as.numeric),
         last_year_of_period = str_extract(Period, "\\d{4}$"))

affil_leiden_key <- read_csv2(
  here::here("data/processed/matching_leiden.csv")
)

papers_per_affiliation_per_w_leiden <- papers_per_affiliation_per_fos %>%
  mutate(affiliationid = as.numeric(affiliationid),
         year = as.character(year)) %>% # needed for merging
  left_join(affil_leiden_key) %>%
  left_join(leiden_small_local, by = join_by(University, 
                                             year == last_year_of_period))
```

## Inclusion into Leiden
```{r, fig.width=9, fig.height=5}
papers_per_affiliation_per_w_leiden %>% 
  filter(year == "2018") %>% 
  mutate(in_leiden = if_else(!is.na(University), "matched", "unmatched")) %>% 
  pivot_longer(starts_with("n_"), names_to = "indicator") %>% 
  mutate(indicator = if_else(
    indicator == "n_frac_citations", 
    "# of citations (fractional)",
    "# of publications (fractional)"
  )) %>% 
  ggplot(aes(SDG_label, value, fill = in_leiden)) +
  facet_wrap(vars(indicator)) + 
  geom_boxplot() +
  scale_y_log10(labels = scales::comma) +
  colorspace::scale_fill_discrete_qualitative() +
  labs(x = NULL, y = NULL, fill = "Leiden Ranking",
       title = "Difference according to mapping to Leiden ranking") +
  theme(legend.position = "top")
```



## Bivariate plot

```{r sdg_who_ptop10_vs_sdg_production, fig.height=4, fig.width=8}
plot_bivariate <- function(df, var, x_pos = 1200, y_pos = 11000,
                           dv = n_frac_papers) {
  pdata <- df %>%
    filter(year == 2018, !is.na(impact_P))
  
  labels <- pdata %>%
    group_by(SDG_label) %>%
    summarise(cor = cor({{var}}, {{dv}}, use = "pairwise.complete.obs")) %>%
    mutate(x = x_pos, y = y_pos,
           label = glue::glue("r = {round(cor, 2)}"))
  
  pdata %>%
    ggplot(aes({{var}}, {{dv}})) +
    geom_point(alpha = .3) +
    scale_x_log10() +
    scale_y_log10(labels = scales::comma) +
    facet_wrap(vars(fix_sdg(SDG_label))) +
    geom_smooth() +
    geom_text(data = labels, aes(x = x, y = y, label = label))
}


papers_per_affiliation_per_w_leiden %>%
  filter(year == 2018) %>% 
  plot_bivariate(P_top10, 800, 20000) +
  labs(x = "# of publications of University that is in top 10% of citations 2015-2018 (fractional)",
       y = "# of papers towards SDG in 2018 (fractional)",
       title = "# of top 10% cited publications vs. SDG production")
```

## Over time
```{r}
pdata <- papers_per_affiliation_per_w_leiden %>% 
  filter(!is.na(P_top10)) %>% 
  group_by(Period) %>% 
  mutate(across(c(P_top10, PP_top10, impact_P), cut_quantiles)) 


plot_proportions <- function(df, indicator, y_var) {
  df %>% 
    group_by(SDG_label, year, {{indicator}}) %>% 
    summarise(n = sum({{y_var}}, na.rm = TRUE)) %>% 
    group_by(SDG_label, year) %>% 
    mutate(prop = n/sum(n)) %>% 
    ggplot(aes(as_year(year), prop, colour = {{indicator}})) +
    geom_line() +
    geom_point() +
    facet_wrap(vars(fix_sdg(SDG_label))) + 
    guides(colour = guide_legend(reverse = TRUE)) +
    labs(x = NULL) +
    scale_y_continuous(labels = scales::percent) +
    colorspace::scale_color_discrete_qualitative()
}
```

```{r sdg_who_ptop_productivity_share, fig.asp=.5, fig.width=8}
pdata %>%
  plot_proportions(indicator = P_top10, n_frac_papers) +
  labs(y = "% of publications (fractional)", colour = expression(P["top 10%"]))
```

## Baseline comparison
```{r}
mag_2021_papers_per_affiliation_per_fos <- mag_2021_papers %>% 
  left_join(mag_2021_paper_author_affil) %>% 
  group_by(authorid, paperid) %>% 
  mutate(frac_value = 1/n()) %>% 
  group_by(affiliationid, year) %>% 
  summarise(n_frac_papers = sum(frac_value, na.rm = TRUE)) %>% 
  filter(!is.na(affiliationid)) %>% 
  collect()

# match with leiden data
mag_2021_papers_per_affiliation_per_w_leiden <- mag_2021_papers_per_affiliation_per_fos %>%
  mutate(affiliationid = as.numeric(affiliationid)) %>% # needed for merging
  left_join(affil_leiden_key) %>%
  left_join(leiden_small_local, by = join_by(University, 
                                             year == last_year_of_period))

# calculate baseline data to fit current plot
baseline_data <- mag_2021_papers_per_affiliation_per_w_leiden %>% 
  filter(!is.na(P_top10)) %>% 
  group_by(Period) %>% 
  mutate(across(c(P_top10, PP_top10, impact_P), cut_quantiles)) %>% 
  group_by(year, P_top10) %>% 
  summarise(n = sum(n_frac_papers, na.rm = TRUE)) %>% 
  group_by(year) %>% 
  mutate(prop = n/sum(n))
```

```{r sdg_who_ptop_productivity_share_w_baseline, fig.asp=.5, fig.width=8}
pdata %>%
  plot_proportions(indicator = P_top10, n_frac_papers) +
  geom_line(data = baseline_data, linetype = 2, alpha = .7) +
  labs(y = "% of publications (fractional)", colour = expression(P["top 10%"]))
```


```{r}
spark_disconnect(sc)
```

